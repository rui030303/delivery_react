{"ast":null,"code":"//编写store\n\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport abc from \"../../data/data.json\";\nconst foodsStore = createSlice({\n  name: 'foods',\n  initialState: {\n    foodsList: [],\n    activeIndex: 0,\n    cartList: []\n  },\n  reducers: {\n    setFoodsList(state, action) {\n      state.foodsList = action.payload;\n    },\n    changeActiveIndex(state, action) {\n      state.activeIndex = action.payload;\n    },\n    addCart(state, action) {\n      const item = state.cartList.find(item => item.id === action.payload.id);\n      if (item) {\n        item.count++;\n        console.log(item.count);\n      } else {\n        state.cartList.push(action.payload);\n      }\n    },\n    increCount(state, action) {\n      const item = state.cartList.find(item => item.id === action.payload.id);\n      item.count++;\n    },\n    decreCount(state, action) {\n      const item = state.cartList.find(item => item.id === action.payload.id);\n      if (item.count === 0) {\n        return;\n      }\n      item.count--;\n    },\n    clearCart(state) {\n      state.cartList = [];\n    }\n  }\n});\nconst {\n  setFoodsList,\n  changeActiveIndex,\n  addCart,\n  increCount,\n  decreCount,\n  clearCart\n} = foodsStore.actions;\n// const fetchFoodsList = ()=>{\n//     return async(dispatch)=>{\n//         const res = await axios.get('http://localhost:3004/takeaway')\n//         dispatch(setFoodsList(res.data))\n//     }\n// }\nconst fetchFoodsList = () => {\n  return dispatch => {\n    dispatch(setFoodsList(data.data));\n  };\n};\nexport { fetchFoodsList, changeActiveIndex, addCart, increCount, decreCount, clearCart };\nconst reducer = foodsStore.reducer;\nexport default reducer;","map":{"version":3,"names":["createSlice","axios","abc","foodsStore","name","initialState","foodsList","activeIndex","cartList","reducers","setFoodsList","state","action","payload","changeActiveIndex","addCart","item","find","id","count","console","log","push","increCount","decreCount","clearCart","actions","fetchFoodsList","dispatch","data","reducer"],"sources":["D:/github/delivery/delivery_react/src/store/modules/takeaway.js"],"sourcesContent":["//编写store\r\n\r\nimport {createSlice} from \"@reduxjs/toolkit\"\r\nimport axios from \"axios\"\r\nimport abc from \"../../data/data.json\"\r\n\r\nconst foodsStore = createSlice({\r\n    name:'foods',\r\n    initialState:{\r\n        foodsList:[],\r\n        activeIndex : 0,\r\n        cartList : []\r\n    },\r\n    reducers:{\r\n        setFoodsList(state, action){\r\n            state.foodsList = action.payload\r\n        },\r\n        changeActiveIndex(state, action){\r\n            state.activeIndex = action.payload\r\n        },\r\n        addCart(state, action){\r\n            const item = state.cartList.find(item => item.id === action.payload.id)\r\n            if (item){\r\n                item.count++\r\n                console.log(item.count);\r\n            }else{\r\n                state.cartList.push(action.payload)\r\n            }\r\n        },\r\n        increCount (state, action) {\r\n            const item = state.cartList.find(item => item.id === action.payload.id)\r\n            item.count++\r\n        },\r\n        decreCount (state, action) {\r\n            const item = state.cartList.find(item => item.id === action.payload.id)\r\n            if (item.count === 0 ){\r\n                return \r\n            }\r\n            item.count--\r\n        },\r\n        clearCart(state){\r\n            state.cartList = []\r\n        }\r\n    }\r\n})\r\nconst {setFoodsList,changeActiveIndex, addCart,increCount, decreCount,clearCart} = foodsStore.actions\r\n// const fetchFoodsList = ()=>{\r\n//     return async(dispatch)=>{\r\n//         const res = await axios.get('http://localhost:3004/takeaway')\r\n//         dispatch(setFoodsList(res.data))\r\n//     }\r\n// }\r\nconst fetchFoodsList = () => {\r\n    return (dispatch) => {\r\n        dispatch(setFoodsList(data.data))\r\n    }\r\n}\r\n\r\nexport {fetchFoodsList,changeActiveIndex, addCart,increCount, decreCount,clearCart}\r\nconst reducer = foodsStore.reducer\r\nexport default reducer"],"mappings":"AAAA;;AAEA,SAAQA,WAAW,QAAO,kBAAkB;AAC5C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,GAAG,MAAM,sBAAsB;AAEtC,MAAMC,UAAU,GAAGH,WAAW,CAAC;EAC3BI,IAAI,EAAC,OAAO;EACZC,YAAY,EAAC;IACTC,SAAS,EAAC,EAAE;IACZC,WAAW,EAAG,CAAC;IACfC,QAAQ,EAAG;EACf,CAAC;EACDC,QAAQ,EAAC;IACLC,YAAYA,CAACC,KAAK,EAAEC,MAAM,EAAC;MACvBD,KAAK,CAACL,SAAS,GAAGM,MAAM,CAACC,OAAO;IACpC,CAAC;IACDC,iBAAiBA,CAACH,KAAK,EAAEC,MAAM,EAAC;MAC5BD,KAAK,CAACJ,WAAW,GAAGK,MAAM,CAACC,OAAO;IACtC,CAAC;IACDE,OAAOA,CAACJ,KAAK,EAAEC,MAAM,EAAC;MAClB,MAAMI,IAAI,GAAGL,KAAK,CAACH,QAAQ,CAACS,IAAI,CAACD,IAAI,IAAIA,IAAI,CAACE,EAAE,KAAKN,MAAM,CAACC,OAAO,CAACK,EAAE,CAAC;MACvE,IAAIF,IAAI,EAAC;QACLA,IAAI,CAACG,KAAK,EAAE;QACZC,OAAO,CAACC,GAAG,CAACL,IAAI,CAACG,KAAK,CAAC;MAC3B,CAAC,MAAI;QACDR,KAAK,CAACH,QAAQ,CAACc,IAAI,CAACV,MAAM,CAACC,OAAO,CAAC;MACvC;IACJ,CAAC;IACDU,UAAUA,CAAEZ,KAAK,EAAEC,MAAM,EAAE;MACvB,MAAMI,IAAI,GAAGL,KAAK,CAACH,QAAQ,CAACS,IAAI,CAACD,IAAI,IAAIA,IAAI,CAACE,EAAE,KAAKN,MAAM,CAACC,OAAO,CAACK,EAAE,CAAC;MACvEF,IAAI,CAACG,KAAK,EAAE;IAChB,CAAC;IACDK,UAAUA,CAAEb,KAAK,EAAEC,MAAM,EAAE;MACvB,MAAMI,IAAI,GAAGL,KAAK,CAACH,QAAQ,CAACS,IAAI,CAACD,IAAI,IAAIA,IAAI,CAACE,EAAE,KAAKN,MAAM,CAACC,OAAO,CAACK,EAAE,CAAC;MACvE,IAAIF,IAAI,CAACG,KAAK,KAAK,CAAC,EAAE;QAClB;MACJ;MACAH,IAAI,CAACG,KAAK,EAAE;IAChB,CAAC;IACDM,SAASA,CAACd,KAAK,EAAC;MACZA,KAAK,CAACH,QAAQ,GAAG,EAAE;IACvB;EACJ;AACJ,CAAC,CAAC;AACF,MAAM;EAACE,YAAY;EAACI,iBAAiB;EAAEC,OAAO;EAACQ,UAAU;EAAEC,UAAU;EAACC;AAAS,CAAC,GAAGtB,UAAU,CAACuB,OAAO;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,cAAc,GAAGA,CAAA,KAAM;EACzB,OAAQC,QAAQ,IAAK;IACjBA,QAAQ,CAAClB,YAAY,CAACmB,IAAI,CAACA,IAAI,CAAC,CAAC;EACrC,CAAC;AACL,CAAC;AAED,SAAQF,cAAc,EAACb,iBAAiB,EAAEC,OAAO,EAACQ,UAAU,EAAEC,UAAU,EAACC,SAAS;AAClF,MAAMK,OAAO,GAAG3B,UAAU,CAAC2B,OAAO;AAClC,eAAeA,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}